# PLAYER OPTIONS

algorithm = 0 # ALGORITHM OPTIONS: FOCUS = 0 (FP), DEFENSIVE = 1 (DP), VHP = 2
mpc = false # TURN ON/OFF MPC
freq_mpc = 10 # FREQUENCY OF MPC UPDATE (IF TURNED ON)
verbose = 3 # 0 = OFF, 1 = LOW (PLAYER), 2 = HIGH (PLAYER + OPTIM), 3 = ALL (+BALL INFO)
save_data = false # SAVING ROBOT/BALL DATA
check_bounce = true # CHECK BOUNCE (TURN OFF FOR REAL ROBOT)
rest_posture_optim = false # RESTING STATE OPTIMIZATION (TURN ON FOR INTERESTING BEHAVIOUR)

# FILTER OPTIONS
spin = false # TURN ON/OFF BALL SPIN BASED PREDICTION
min_obs = 12 # MINIMUM NUMBER OF OBSERVATIONS TO START FILTER
var_noise = 0.001 # FILTER VAR OF OBS NOISE
var_model = 0.03 # FILTER VAR OF PROCESS
t_reset_threshold = 0.3 # TIME IT TAKES TO RESET FILTER IF NO NEW BALL OBSERVATIONS ARRIVE
outlier_detection = false # outlier detection should be considered when testing on REAL ROBOT!
rejection_multiplier = 2.0


# OPTIM OPTIONS
# START OPTIMIZATION OFFSET 
# AFTER TABLE Y-MIN = dist_to_table - table_length
# dist_to_table = -1.15, table_length = -2.76
start_optim_offset = 1.5
# TIME TO RETURN ROBOT TO REST POSTURE
time2return = 1.0
# DESIRED LANDING PARAMETERS (FOR VHP AND FIXED PLAYER)
ball_land_des_x_offset = 0.0
ball_land_des_y_offset = 0.0
time_land_des = 0.4
# WEIGHTS FOR DEFENSIVE PLAYER (DP)
# hitting, net and landing weights respectively
weights = 1000 # trajectory
weights = 10 # net punishment weight
weights = 10 # landing punishment weight
# PUNISHMENT FOR DEFENSIVE PLAYER (DP)
# x-y locations of desired landing pos
penalty_loc = 0.0 #x_des_net
penalty_loc = 0.23 #z_des_net
penalty_loc = 0.0 #x_des_land
penalty_loc = -3.22 #y_des_land
# OUTGOING BALL VELOCITY MULTIPLIERS FOR DP
# after racket contact ball outgoing vels. are multiplied with these
mult_vel = 0.9
mult_vel = 0.8
mult_vel = 0.83
VHPY = -0.3# LOCATION OF VIRTUAL HITTING PLANE

# ZMQ INTERFACE SETTINGS
url = tcp://localhost:7660 #helbe/localhost
debug_vision = false # print ball info received by listener
listen_2d = true # listen to 2d server if true else to 3d server